{"mappings":"AAAA,EAAiC,AAAjC,+BAAiC;AACjC,EAA8C,AAA9C,4CAA8C;AAC9C,EAA+B,AAA/B,6BAA+B;AAC/B,EAA+E,AAA/E,6EAA+E;AAC/E,EAAoB,AAApB,kBAAoB;AACpB,EAAQ,AAAR,MAAQ;AACR,EAAK,AAAL,GAAK;AAEL,KAAK,CAAC,UAAU,oBAAoB,CAAC;IAGnC,GAAG,CAAC,CAAC;QACH,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAA2E;QAEnG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAE3B,EAAiI,AAAjI,0MAA4M;QACjI,EAAa,AAAxF,yJAA2J;QACxF,EAAjE,GAAE,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAE5D,EAAoB,AAApB,kBAAoB;QACpB,EAAE;QACF,OAAO,CAAC,GAAG,CAAC,IAAI;QAEhB,EAAS,AAAT,OAAS;QACT,EAA4C,AAA5C,8EAAgF;QAC5C,EAAwE,AAA5G,iMAAmM;QAC5G,GAApF,CAAC,CAAC,CAAA,MAAM,EAAA,CAAC,GAAG,IAAI,CAAC,IAAI;QAExB,EAAyF,AAAzF,wJAAyF;QACzF,MAAM,GAAG,CAAC;YACR,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;QACjC,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,MAAM;IAGpB,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QAEb,KAAK,CAAC,GAAG;IAEX,CAAC;AAEH,CAAC;AAGD,UAAU","sources":["src/js/script.js"],"sourcesContent":["// const timeout = function (s) {\n//   return new Promise(function (_, reject) {\n//     setTimeout(function () {\n//       reject(new Error(`Request took too long! Timeout after ${s} second`));\n//     }, s * 1000);\n//   });\n// };\n\nconst showRecipe = async function() {\n\n\n  try {\n    const res = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcd07')\n\n    const data = await res.json()\n\n    // Step 7 - если неправильный id, то в свойстве объекта res в ok - будет false и в ошибку мы вставляем message из полученной даты\n    // эта ошибка попадает в блок catch, которая выдает алерт с прописанной тут нотификацией\n    if(!res.ok) throw new Error(`${data.message} (${res.status})`)\n\n    // console.log(res);\n    //\n    console.log(data);\n\n    // Step 8\n    // сохраняем из полученных данных сам рецепт\n    // так как это объект, то можно сразу деструктурировать полученный рецепт не просто в переменную, а в объект\n    let {recipe} = data.data\n\n    //так как recipe у нас переменная, то переназначим ее в объект c понятными нам свойствами\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients\n    }\n\n    console.log(recipe);\n\n\n  } catch (err) {\n\n    alert(err)\n\n  }\n\n}\n\n\nshowRecipe()"],"names":[],"version":3,"file":"index.26f645e3.js.map","sourceRoot":"/__parcel_source_root/"}